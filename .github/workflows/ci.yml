name: Desk-Square CI

on:
  push:
    branches:
      - "**"
      - "!main"
  pull_request:
    branches:
      - main
    types: [opened, synchronize, closed]

jobs:
   lint:
    if: (!(github.event.action == 'closed' && github.event.pull_request.merged != true))
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Load cached Poetry installation
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-0

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

#      - name: Set Poetry config
#        run: |
#          poetry config settings.virtualenvs.in-project false
#          poetry config settings.virtualenvs.path ~/.virtualenvs

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run Code Analysis
        env:
          DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
          DJANGO_SETTINGS_MODULE: 'config.settings'
          SECRET_KEY: 'abcd123$<12@kskdmdmsecretkeydsndm@'
          CONN_MAX_AGE: 60
        run: poetry run make lint

   test:
    if: (!(github.event.action == 'closed' && github.event.pull_request.merged != true))
    needs: ['lint']
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Load cached Poetry installation
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-0

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run tests
        env:
          DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
          DJANGO_SETTINGS_MODULE: 'config.settings'
          SECRET_KEY: 'abcd123$<12@kskdmdmsecretkeydsndm@'
          CONN_MAX_AGE: 60
        run: |
          poetry run pytest
          poetry run python manage.py migrate --no-input